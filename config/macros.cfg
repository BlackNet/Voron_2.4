
#####################################################################
# Macros
#####################################################################


#####################################################################
# Mobile Raker companion notify macro
# https://github.com/Clon1998/mobileraker_companion/blob/main/docs/Custom_Notifications.md
#####################################################################

[gcode_macro MR_NOTIFY]
description: Allows you to send a custom notification via Mobileraker without using the M117 command
gcode:
    {% set msg = "MR_NOTIFY:" ~ (params.TITLE ~ "|" if 'TITLE' in params|upper else "") ~ params.MESSAGE %}

    {% if 'MESSAGE' in params|upper %}
        { action_respond_info(msg) }
    {% else %}
        { action_raise_error('Must provide MESSAGE parameter') }
    {% endif %}


#####################################################################
#   Use PRINT_START for the slicer starting script
# 
# for PS
# PRINT_START 
#   BED=[first_layer_bed_temperature] 
#   HOTEND={first_layer_temperature[initial_extruder]} 
#   CHAMBER=65 
#   LAYERS={total_layer_count} 
#   NOZZLE_SIZE={nozzle_diameter[0]} 
#   MESH_MIN={first_layer_print_min[0]},{first_layer_print_min[1]}  
#   MESH_MAX={first_layer_print_max[0]},{first_layer_print_max[1]} 
#   FILAMENT=[filament_type]
#
# for SS
# PRINT_START 
#    BED=[first_layer_bed_temperature] 
#    HOTEND={first_layer_temperature[initial_extruder]+extruder_temperature_offset[initial_extruder]} 
#    CHAMBER=[chamber_temperature]  
#    Z_ADJUST=0.0
#    NOZZLE_SIZE={nozzle_diameter[0]} 
#    MESH_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} 
#    MESH_MAX={first_layer_print_max[0]},{first_layer_print_max[1]} 
#    FILAMENT=[filament_type]
# 
# for Cura:
# START_PRINT 
#     BED_TEMP={material_bed_temperature_layer_0} 
#     EXTRUDER_TEMP={material_print_temperature_layer_0} 
#     CHAMBER={build_volume_temperature} 
#     FILAMENT=ABS
# 
# for S3D v4 
# PRINT_START 
#    HOTEND=[extruder0_temperature] 
#    BED=[bed0_temperature] 
#    MESH_MIN=[build_min_x],[build_min_y] 
#    MESH_MAX=[build_max_x],[build_max_y]  
#    LAYERS=[total_layer_count] 
#    CHAMBER=40  
#    NOZZLE_SIZE=0.6 
#    FILAMENT=ABS
# 
# for S3D v5
# PRINT_START 
#    HOTEND=[extruder0_temperature] 
#    BED=[bed0_temperature] 
#    MESH_MIN=[build_min_x],[build_min_y] 
#    MESH_MAX=[build_max_x],[build_max_y]  
#    LAYERS=[total_layer_count] 
#    CHAMBER=[chamber0_temperature]  
#    NOZZLE_SIZE="0.6" 
#    FILAMENT="ABS"

# Orca Slicer
# PRINT_START 
#    BED=[first_layer_bed_temperature] 
#    HOTEND=[nozzle_temperature_initial_layer] 
#    CHAMBER=[chamber_temperature] 
#    Z_ADJUST=0.0 
#    NOZZLE_SIZE={nozzle_diameter[0]} 
#    MESH_MIN={first_layer_print_min[0]},{first_layer_print_min[1]} 
#    MESH_MAX={first_layer_print_max[0]},{first_layer_print_max[1]} 
#    FILAMENT=[filament_type]
#####################################################################

[gcode_macro PRINT_START]
gcode:

    STATUS_BUSY     # LETS GET BUZY!!
    {% set BED_TEMP = params.BED|default(110)|float %}
    {% set EXTRUDER_TEMP = params.HOTEND|default(240)|float %}
    {% set CHAMBER_TEMP = params.CHAMBER|default(35)|int %}
    {% set LAYERS = params.LAYERS|default(35)|int %}
    {% set NOZZLE_SIZE= params.NOZZLE_SIZE|default(0.6)|float %}
    {% set MESH_MAX = params.MESH_MAX|string %}
    {% set MESH_MIN = params.MESH_MIN|string %}
    {% set FILAMENT_TYPE = params.FILAMENT|string %}


    # Adjust the G-Code Z offset if needed, AFTER CALIBRATE_Z
    # PRINT_START Z_ADJUST=0.0
    SET_GCODE_OFFSET Z_ADJUST={params.Z_ADJUST|default(0.0)|float} MOVE=1
    
    #blab info to console.
    M118 BED: {BED_TEMP}, EXTRUDER: {EXTRUDER_TEMP}, CHAMBER_TEMP: {CHAMBER_TEMP}
    M118 MESH_MIN: {MESH_MIN}, MESH_MAX: {MESH_MAX}, Z_ADJUST: {Z_ADJUST}
    M118 NOZZLE_SIZE: {NOZZLE_SIZE}, LAYERS: {LAYERS}
    M118 FILAMENT_TYPE: {FILAMENT_TYPE}

  {% set mesh_min_x = MESH_MIN.split(",")[0]|float %}
  {% set mesh_min_y = MESH_MIN.split(",")[1]|float %}
  {% set mesh_max_x = MESH_MAX.split(",")[0]|float %}
  {% set mesh_max_y = MESH_MAX.split(",")[1]|float %}

    # Filament type, used for chamber temps
    SAVE_VARIABLE VARIABLE=filament_type = VALUE='"{FILAMENT_TYPE}"'

    # "Start G-code" (above of your start_print gcode)
    SET_PRINT_STATS_INFO TOTAL_LAYER={LAYERS}

    #fire up the driver fans
    SET_FAN_SPEED FAN=Driver_Fan1 SPEED=1
    SET_FAN_SPEED FAN=Driver_fan2 SPEED=1
    
    # Start bed heating
    # Wait for the bed to reach the temperature
    STATUS_HEATING
    M118 Bed temp {BED_TEMP}
    M190 S{BED_TEMP}

    # turn on the Nevermore filter for print time.
    {% if FILAMENT_TYPE == "ABS" or FILAMENT_TYPE == "ASA" %}
        M118 set nevermore on
        SET_FAN_SPEED FAN=Nevermore SPEED=1
        {% if CHAMBER_TEMP > 0 %}
            HEATSOAK_CHAMBER TEMP={CHAMBER_TEMP} BED={BED_TEMP}
        {% else %}
            M118 No chamber temp, call heat soak chamber to 45C.
            HEATSOAK_CHAMBER TEMP=45 BED={BED_TEMP}
        {% endif %}
        M118 return from heat soak chamber.
    {% else %}
        M118 Not ABS/ASA, no chamber soak needed.
    {% endif %}

    BED_MESH_CLEAR    # clear bed mesh

    # First home, nothing is calibrated.
    STATUS_HOMING
    G28    # Home all

    # level the corners
    STATUS_LEVELING
    M118 QGL

    # set nozzle to 150C for tap.
    M109 S150
    PROBE_ACCURACY
    QUAD_GANTRY_LEVEL    # quad level

    # home again, recalibrate all axis.
    STATUS_HOMING
    G28    # home all

    # dock, we are done
    STATUS_BUSY

    # we set a manual offset that was dialed in for this printer.
    SET_GCODE_OFFSET Z=0 MOVE=0
    SET_GCODE_OFFSET Z_ADJUST=+1.3 MOVE=0   

    #Bed mesh stuff here
    BED_MESH_CALIBRATE mesh_min={mesh_min_x},{mesh_min_y} mesh_max={mesh_max_x},{mesh_max_y} PROBE_COUNT=5,5


    #Move to the middle of the bed
    fSTATUS_READY
    PARKCENTER z=25   

    # Set and wait for the nozzle to reach the temperature
    STATUS_HEATING
    M118 Extruder temp {EXTRUDER_TEMP}
    M109 S{EXTRUDER_TEMP}
    NOZZLE_WIPE
  
    PARKCENTER z=5
    STATUS_PRINTING

    M118 Set Skew
    SKEW_PROFILE LOAD=CaliFlower



#####################################################################
# park center
#####################################################################

[gcode_macro PARKCENTER]
gcode:
    {% set Z = params.Z|default(60)|float %}
    SAVE_GCODE_STATE NAME=PARKCENTER_state

    # check if homed, if not do it
    {% if printer.toolhead.homed_axes != "xyz" %} G28 {% endif %} ; Home if not already homed
    G90                            ; absolute positioning

    # Find midpoint of bed.
    {% set X_Mid = printer.configfile.config.stepper_x.position_max|float / 2 %}
    {% set Y_Mid = printer.configfile.config.stepper_y.position_max|float / 2 %}
    G0 X{ X_Mid } Y{ Y_Mid } Z{Z} F12000       ; move to center
 
    RESTORE_GCODE_STATE NAME=PARKCENTER_state



#####################################################################
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
#####################################################################

[gcode_macro PRINT_END]
gcode:

    M118 Print End

    #LED status finished
    status_part_ready
    
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS

    # bed fans off
    SET_FAN_SPEED FAN=Bed_Fan1 SPEED=0
    SET_FAN_SPEED FAN=Bed_Fan2 SPEED=0

    #driver fans off
    SET_FAN_SPEED FAN=Driver_Fan1 SPEED=0
    SET_FAN_SPEED FAN=Driver_Fan2 SPEED=0

    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    M118 Clear Skew
    SET_SKEW CLEAR=1
    
    MR_NOTIFY TITLE="Vor on" MESSAGE="Print Finished!"

    # set chamber fan ON to flush / purge / cool
##    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=chamber TARGET=35
##    TEMPERATURE_WAIT SENSOR="temperature_fan chamber" MINIMUM=35
    #M141 TEMP 35
    
    # run Nevermore for 3 minutes after print finishes
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=120


#####################################################################
## Gantry Adjustment
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from the nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
#####################################################################

[quad_gantry_level]

##  Gantry Corners for 350mm Build
##  Uncomment for 350mm build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

speed: 300
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.008
max_adjust: 10


#####################################################################
## Homing
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#####################################################################

# new home is toolchanger.  uses the other option
#[safe_z_home]
#### home_xy_position:232,350
#home_xy_position:175,175
#speed:100
#z_hop:20


#####################################################################
## nozzle wiping
## taken from https://www.printables.com/model/627261-voron-decontaminator-using-bambu-nozzle-wiper
##
#####################################################################


[gcode_macro NOZZLE_WIPE]
variable_start_x: 260
variable_start_y: 355
variable_start_z: 5.0

variable_wipe_dist: 40
variable_wipe_qty: 15
variable_wipe_spd: 18000
variable_raise_distance: 10
variable_travel_speed: 6000

#variable_wipe_nozzle_temp: 150

gcode:

 SAVE_GCODE_STATE NAME=nozzle_wipe


 M117 Nozzle wiping...
 STATUS_CLEANING

 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

 G90       ; absolute positioning

# find current position.  G1 X{cur_x} Y{cur_y} Z{cur_z} F6000
 {% set cur_x = printer.toolhead.position.x %}
 {% set cur_y = printer.toolhead.position.y %}
 {% set cur_z = printer.toolhead.position.z %}

 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F{travel_speed}
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd}
   G1 X{start_x} F{wipe_spd}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}

 G1 X{cur_x} Y{cur_y} Z{cur_z} F{travel_speed}
 RESTORE_GCODE_STATE NAME=nozzle_wipe
 STATUS_READY


#####################################################################
# 
# Spoolman stuff 
# 
#####################################################################

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
  {% if params.ID %}
    {% set id = params.ID|int %}
    {action_call_remote_method(
       "spoolman_set_active_spool",
       spool_id=id
    )}
  {% else %}
    {action_respond_info("Parameter 'ID' is required")}
  {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
  {action_call_remote_method(
    "spoolman_set_active_spool",
    spool_id=None
  )}


#####################################################################
# 
# Cancel print
# 
#####################################################################

[gcode_macro MY_CANCEL_PRINT]
description: Cancel print reploader to turn off bedfans and nevermore.
gcode:
    # bed fans off
    SET_FAN_SPEED FAN=Bed_Fan1 SPEED=0
    SET_FAN_SPEED FAN=Bed_Fan2 SPEED=0
    
    # run Nevermore for 3 minutes after print finishes
    UPDATE_DELAYED_GCODE ID=filter_off DURATION=120
    
    M118 my CANCEL_PRINT
    
    CANCEL_PRINT


#####################################################################
# 
# PREHEAT_ABS
# 
#####################################################################
[gcode_macro PREHEAT_ABS]
description: Preheat bed/hotend/chamber/fans
gcode:
  #variables
  {% set BED_TEMP = 110%}
  {% set EXTRUDER_TEMP = 150%}
  {% set CHAMBER_TEMP = 50%}  
  {% set FILAMENT_TYPE = ABS%}

  # process order is
  # set bed temp 
  # set nevermore / bed fans on
  # home / QGL if needed
  # park center

  # Start bed heating
  # Wait for the bed to reach the temperature
  STATUS_HEATING
  M118 Bed temp {BED_TEMP}
  M140 S{BED_TEMP}
#  M190 S{BED_TEMP}

  # nevermore on.
  SET_FAN_SPEED FAN=Nevermore SPEED=1

  # turn on bed fans 1 and 2
  SET_FAN_SPEED FAN=Bed_Fan1 SPEED=1
  SET_FAN_SPEED FAN=Bed_Fan2 SPEED=1
    
  # home / QGL
  {% if printer.quad_gantry_level.applied == False %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
      STATUS_HOMING
      G28 ; home if not already homed
    {% endif %}
      STATUS_LEVELING
      M118 QGL
      QUAD_GANTRY_LEVEL
  {% endif %}

  # park center
  STATUS_READY
  PARKCENTER

  HEATSOAK_CHAMBER TEMP=50 BED=110
  MR_NOTIFY TITLE="Vor on" MESSAGE="Ready to print A B S!"


#####################################################################
# 
# StealthChanger macros
# 
#####################################################################

[gcode_macro M104]
rename_existing: M104.1
description: [T<index>] [S<temperature>]
  Set tool temperature.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE{newparameters}
  {% else %}
    M104.1 {rawparams}
  {% endif %}

[gcode_macro M109]
rename_existing: M109.1
description: [T<index>] [S<temperature>]
  Set tool temperature and wait.
  T= Tool number, optional. If this parameter is not provided, the current tool is used.
  S= Target temperature
gcode:
  {% if params.T is defined %}
    {% set newparameters = "" %}
    {% set newparameters = newparameters ~ " T="~params.T %}
    {% if params.S is defined %}
      {% set newparameters = newparameters ~ " TARGET="~params.S %}
    {% endif %}
    SET_TOOL_TEMPERATURE WAIT=1 {newparameters}
  {% else %}
    M109.1 {rawparams}
  {% endif %}


[gcode_macro do_setup]
description: home, GQL, home, park center
gcode:

    # First home, nothing is calibrated.
    STATUS_HOMING
    G28    # Home all

    # level the corners
    STATUS_LEVELING
    M118 QGL

    PROBE_ACCURACY
    QUAD_GANTRY_LEVEL    # quad level

    # home again, recalibrate all axis.
    STATUS_HOMING
    G28    # home all

    PARKCENTER
    STATUS_READY
    