#BigTreeTech MMB Version 2.0 WHITE ERCFv2 C9.0U Filament Blocks BTT Kit Config

# MMU MACHINE / TYPE ---------------------------------------------------------------------------------------------------
# ███╗   ███╗███╗   ███╗██╗   ██╗    ███╗   ███╗ █████╗  ██████╗██╗  ██╗██╗███╗   ██╗███████╗
# ████╗ ████║████╗ ████║██║   ██║    ████╗ ████║██╔══██╗██╔════╝██║  ██║██║████╗  ██║██╔════╝
# ██╔████╔██║██╔████╔██║██║   ██║    ██╔████╔██║███████║██║     ███████║██║██╔██╗ ██║█████╗  
# ██║╚██╔╝██║██║╚██╔╝██║██║   ██║    ██║╚██╔╝██║██╔══██║██║     ██╔══██║██║██║╚██╗██║██╔══╝  
# ██║ ╚═╝ ██║██║ ╚═╝ ██║╚██████╔╝    ██║ ╚═╝ ██║██║  ██║╚██████╗██║  ██║██║██║ ╚████║███████╗
# ╚═╝     ╚═╝╚═╝     ╚═╝ ╚═════╝     ╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝╚═╝  ╚═══╝╚══════╝
[mmu_machine]
num_gates: 8				# Number of selectable gates on MMU
mmu_vendor: ERCF			# MMU family
mmu_version: 2.0			# MMU hardware version number (add mod suffix documented above)
# FILAMENT DRIVE GEAR STEPPER  ---------------------------------------------------------------------------------------------

[temperature_sensor mmu]
sensor_type: temperature_mcu
sensor_mcu: mmu
min_temp: 0
max_temp: 100

# EZ Driver1
[tmc2209 stepper_mmu_gear]
uart_pin: mmu:PB5
#uart_address: 0 			
interpolate: True
run_current: 0.45		
hold_current: 0.1			
sense_resistor: 0.110			
stealthchop_threshold: 0		
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
#diag_pin: ^mmu:PB9		# Set to MCU pin connected to TMC DIAG pin for gear stepper
#driver_SGTHRS: 60			# 255 is most sensitive value, 0 is least sensitive


#[tmc2209 ez_driver1]
[stepper_mmu_gear]
step_pin: mmu:PD4
dir_pin: mmu:PD3
enable_pin: !mmu:PD5                # PA8 for MMB_1.0 use PB8 for MMB_1.1
rotation_distance: 20		
gear_ratio: 1:1			       
microsteps: 32 				
full_steps_per_rotation: 200		
#extra_endstop_pins: tmc2209_stepper_mmu_gear:virtual_endstop
#extra_endstop_names: mmu_gear_touch


# SELECTOR STEPPER  --------------------------------------------------------------------------------------------------------


# EZ Driver2
[tmc2209 stepper_mmu_selector]
uart_pin: mmu:PB4
#uart_address: 1 			
run_current: 0.45			
hold_current: 0.2			
interpolate: True
sense_resistor: 0.110
stealthchop_threshold: 100		
driver_IHOLDDELAY: 8
driver_TPOWERDOWN: 20
driver_TBL: 2
driver_TOFF: 3
driver_HEND: 1
driver_HSTRT: 3
driver_PWM_AUTOGRAD: True
driver_PWM_AUTOSCALE: True
driver_PWM_LIM: 12
driver_PWM_REG: 8
driver_PWM_FREQ: 1
driver_PWM_GRAD: 14
driver_PWM_OFS: 36
#diag_pin: ^mmu:PB8 		# Set to MCU pin connected to TMC DIAG pin for selector stepper
#driver_SGTHRS: 75			# 255 is most sensitive value, 0 is least sensitive


#[tmc2209 ez_driver2]
[stepper_mmu_selector]
step_pin: mmu:PC9
dir_pin: mmu:PC8
enable_pin: !mmu:PD2
rotation_distance: 40
microsteps: 16 				        
full_steps_per_rotation: 200		
endstop_pin: ^mmu:PA15                 # STOP 1                
endstop_name: mmu_sel_home
#extra_endstop_pins: tmc2209_stepper_mmu_selector:virtual_endstop
#extra_endstop_names: mmu_sel_touch


# SELECTOR SERVO -----------------------------------------------------------------------------------------------------------
# Basic servo PWM setup. If these values are changed then the angles defined for different positions will also change


[mmu_servo selector_servo]
pin: mmu:PA1                                                                    # MMB 1.0 and 1.1 use mmu:PA0
maximum_servo_angle: 180
minimum_pulse_width: 0.00085
maximum_pulse_width: 0.00215

# OPTIONAL GANTRY SERVO FOR FILAMETRIX FILAMENT CUTTER ----------------------------------------------------------------
# Basic servo PWM setup. If these values are changed then the angles defined for different positions will also change
#
# Uncomment only if you have gantry servo
#
[mmu_servo mmu_gantry_servo]
pin: mmu:PA0                                                            
maximum_servo_angle:180
minimum_pulse_width: 0.00075
maximum_pulse_width: 0.00225
initial_angle: 180

# ENCODER -----------------------------------------------------------------------------------------------------------------
# Encoder measures distance, monitors for runout and clogging and constantly calculates % flow rate
# Note that the encoder_resolution set if is purely a default to get started.  It is set through calibration
# and stored in mmu_vars.cfg


[mmu_encoder mmu_encoder]
encoder_pin: ^mmu:PC2		
encoder_resolution: 1.0			
desired_headroom: 5.0			# The clog/runout headroom that MMU will attempt to maintain (closest MMU comes to triggering runout)
average_samples: 4		    	# The "damping" effect of last measurement. Higher value means clog_length will be reduced more slowly
flowrate_samples: 20			# How many "movements" on the encoder to measure over for flowrate calc


########################################
# STEPPER configuration                #
########################################


# EZ Driver3
#[ez_driver3]
#step_pin: mmu:PC15
#dir_pin: mmu:PC11
#enable_pin: !mmu:PC10
#microsteps: 16
#rotation_distance: 40
#full_steps_per_rotation: 200

# EZ Driver4
#[ez_driver4]
#step_pin: mmu:PC13
#dir_pin: mmu:PC12
#enable_pin: !mmu:PC14
#microsteps: 16
#rotation_distance: 40
#full_steps_per_rotation: 200


########################################
# TMC2209 configuration                # 
########################################


#[tmc2209 ez_driver3]
#uart_pin: mmu:PB3
##diag_pin: mmu:PB7
#run_current: 0.800
#hold_current: 0.1
#interpolate: True
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 1
#driver_HSTRT: 3
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0

#[tmc2209 ez_driver4]
#uart_pin: mmu:PD6
##diag_pin: mmu:PB6
#run_current: 0.800
#hold_current: 0.1
#interpolate: True
#sense_resistor: 0.110
#stealthchop_threshold: 999999
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 1
#driver_HSTRT: 3
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36
#driver_SGTHRS: 0


#######################################
# Additional Sensors                  #
#######################################

# STOP 2 mmu:PA10
# STOP 3 mmu:PD9
# STOP 4 mmu:PBD

# FILAMENT SENSORS ---------------------------------------------------------------------------------------------------------
# Define the pins for optional sensors in the filament path. All but the pre-gate sensors will be automatically setup as
# both endstops (for homing) and sensors for visibility purposes.
#
# pre_gate_switch_pin_X: pre-gate sensor detects filament at entry to MMU. X=gate number (0..N)
# toolhead_switch_pin: 'toolhead' sensor detects filament after extruder entry
# extruder_switch_pin: 'extruder' sensor detects filament just before the extruder entry
# gate_switch_pin: shared 'gate' sensor detects filament at the gate of the MMU
#
# Uncomment sensors that are fitted
#
[mmu_sensors]
pre_gate_switch_pin_0: ^mmu:PC6
pre_gate_switch_pin_1: ^mmu:PC7                
pre_gate_switch_pin_2: ^mmu:PA8
pre_gate_switch_pin_3: ^mmu:PA9
pre_gate_switch_pin_4: ^mmu:PB11
pre_gate_switch_pin_5: ^mmu:PB12
pre_gate_switch_pin_6: ^mmu:PB2
pre_gate_switch_pin_7: ^mmu:PB10
#pre_gate_switch_pin_8: ^mmu:PB0
#pre_gate_switch_pin_9: ^mmu:PB1
#pre_gate_switch_pin_10: ^mmu:PC4
#pre_gate_switch_pin_11: ^mmu:PC5

#gate_switch_pin: mmu:MMU_GATE_SENSOR
#extruder_switch_pin: ^EBBCan: PB5
#toolhead_switch_pin: ^EBBCan: PB7


## MMU OPTIONAL NEOPIXEL LED SUPPORT ----------------------------------------------------------------------------------------
## Define the led connection, type and length
##
[neopixel mmu_leds]
pin: mmu:MMU_NEOPIXEL
chain_count: 8			# Number gates x1 or x2 + 1 (if you want status)
color_order: GRB		# Set based on your particular neopixel specification
#
#
## MMU LED EFFECT SEGMENTS --------------------------------------------------------------------------------------------------
## NOTE IT HARMLESS TO LEAVE THIS SECTION - IT IS INACTIVE UNLESS 'led_strip' can be found by uncommenting [neopixel] above
##
## Define neopixel LEDs for your MMU. The chain_count must be large enough for your defined effect ranges. These ranges are:
##   exit   .. this set of LEDs, one for every gate, usually would be mounted at the exit point of the gate
##   entry  .. this set of LEDs, one for every gate, could be mounted at the entry point of filament into the MMU
##   status .. this single LED represents the status of the currently selected filament, typically  mounted on selection mechanism
##
## Note that all sets are optional. You can opt simple to have just the 'exit' set for example. The advantage to having
## both entry and exit LEDs is that the 'entry'ones can display gate status while the 'exit' one displays the filament color
## 
## The effects requires the installation of Julian Schill's awesome LED effect module: https://github.com/julianschill/klipper-led_effect
## LED's are indexed in the chain from 1..N. Thus to set up LED's on 'exit' and a single 'status' LED on a 4 gate MMU:
##   exit_range:   1-4
##   status_index: 5
## In this example no 'entry' set is configured.
##
## Note the range order is important and depends on your wiring. Thus 1-4 and 4-1 both represent the same LED range but mapped
## to different gates
##
## Happy Hare provides a convenience wrapper [mmu_led_effect] that not only creates an effect on each of the [mmu_leds] specified
## segments but also each individual LED for atomic control.
##
[mmu_leds]
led_strip: neopixel:mmu_leds
exit_range: 8-1
##entry_range: 11-11
#status_index: 9
frame_rate: 24
##
